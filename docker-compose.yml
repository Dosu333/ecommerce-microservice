services:
  postgres:
    image: postgres:14.1-alpine
    container_name: postgres_db
    restart: always
    env_file:
      - ./.env
    networks:
      - ecommerce-network
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: bitnami/redis:latest
    container_name: redis_cache
    env_file:
      - ./.env
    networks:
      - ecommerce-network
    restart: always
    ports:
      - "6379:6379"

  user-service:
    build: ./user_service
    container_name: user-service
    restart: always
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.env
    networks:
      - ecommerce-network
    ports:
      - "8000:8000"
    volumes:
      - ./user_service:/app
    command: python manage.py runserver 0.0.0.0:8000

  product-service:
    build: ./product_service
    container_name: product-service
    restart: always
    env_file:
      - ./.env
    networks:
      - ecommerce-network
    ports:
      - "8002:8002"
    volumes:
      - ./product_service:/app
    command: python manage.py runserver 0.0.0.0:8002

  celery_worker_user:
    build: ./user_service
    container_name: user_service_celery_worker
    restart: always
    depends_on:
      - redis
      - user-service
    env_file:
      - ./.env
    networks:
      - ecommerce-network
    volumes:
      - ./user_service:/app
    command: celery -A core worker --loglevel=info --queues=user_queue --logfile=logs/celery.log

  celery_worker_product:
    build: ./product_service
    container_name: product_service_celery_worker
    restart: always
    depends_on:
      - redis
      - product-service
    env_file:
      - ./.env
    networks:
      - ecommerce-network
    volumes:
      - ./product_service:/app
    command: celery -A core worker --loglevel=info --queues=product_queue --logfile=logs/celery.log

  celery_beat:
    build: ./user_service
    container_name: celery_beat
    restart: always
    depends_on:
      - redis
      - celery_worker_user
    env_file:
      - ./.env
    networks:
      - ecommerce-network
    volumes:
      - ./user_service:/app
    command: celery -A core beat --loglevel=info

  flower:
    image: mher/flower
    container_name: flower_dashboard
    restart: always
    depends_on:
      - redis
      - celery_worker_user
      - celery_worker_product
    env_file:
      - ./.env
    networks:
      - ecommerce-network
    ports:
      - "5555:5555"
    command: celery --broker=${REDIS_URL} flower --port=5555

networks:
  ecommerce-network:
    driver: bridge

volumes:
  postgres_data:
